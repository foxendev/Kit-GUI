<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_kit_primitive</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()
//kit_editbox_evt_create()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (selected = true)
{   
    if ignore_next_key = false
    {
        if keyboard_lastkey &lt;&gt; -1
        {
            switch (keyboard_lastkey)
            {
                case 8: 
                {
                    if selector_pos[0] &lt;&gt; selector_pos[1]
                    {
                        kit_editbox_sel_delete(id)
                    } else
                    {
                        text = string_delete(text, selector_pos[0], 1) 
                        selector_pos[0] -- 
                        selector_pos[1] --  
                    }
                }; break;
                case 35: 
                {
                    selector_pos[1] = string_length(text)   
                    if !keyboard_check(vk_shift)
                    {selector_pos[0] = string_length(text)}
                }; break;
                case 36: 
                {
                    selector_pos[1] = 0   
                    if !keyboard_check(vk_shift)
                    {selector_pos[0] = 0}
                }; break;
                case 37: kit_editbox_sel_move(id, -1); break;
                case 39: kit_editbox_sel_move(id, 1); break;
                default: 
                {
                    var allow = 0;
                    if only_numbers
                    {allow = string_pos(keyboard_lastchar, allowed_chars_numbers)}
                    else
                    {allow = string_pos(keyboard_lastchar, allowed_chars)}
                    if allow &gt; 0
                    {
                        if string_length(text) + 1 &lt;= max_chars
                        {
                            if selector_pos[0] &lt;&gt; selector_pos[1]
                            {kit_editbox_sel_delete(id)} 
                            var c = keyboard_lastchar;
                            text = string_insert(c, text, selector_pos[0] + 1);
                            selector_pos[0] ++
                            selector_pos[1] ++
                            keyboard_lastchar = '';
                        }
                    }
                };
            }
            keyboard_lastkey = -1;   
            kit_editbox_upd_display(id)         
        }
    } else
    {
        ignore_next_key = false
        keyboard_lastkey = -1
    }
    selector_pos[0] = clamp(selector_pos[0], 0, string_length(text))
    selector_pos[1] = clamp(selector_pos[1], 0, string_length(text))
} else
{
    ignore_next_key = true 
    //text_offset += (keyboard_check_pressed(ord('A')) - keyboard_check_pressed(ord('D')))   
}


if selector_pos[1] &gt; text_offset + text_display_end
{
    text_offset += floor(width/12)
    kit_editbox_upd_display(id)
}

if selector_pos[1] &lt; text_display_start - 1
{
    text_offset -= floor(width/12)
    kit_editbox_upd_display(id)
}

//text_offset_v += (text_offset - text_offset_v)/8 
text_offset = clamp(text_offset, 0, string_length(text))


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()
kit_editbox_evt_drawui()

/*
draw_set_valign(0)
draw_set_color(c_black)
draw_text(x, y + height + 4,
'SELECTOR POS 0: ' + string(selector_pos[0])
+ '#' + 
'SELECTOR POS 1: ' + string(selector_pos[1])
+ '#' + 
'TEXT OFFSET: ' + string(text_offset)
+ '#' + 
'DISP START: ' + string(text_display_start)
+ '#' + 
'DISP END: ' + string(text_display_end) 
+ '#' + 
'asd: ' + string_copy(text_display, -1, selector_pos[0] - text_offset)
+ '#' +
'asdd: ' + string(selector_pos[0] - text_offset)

)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
